URL: https://segment.com/docs/connections/spec/page/#spec-page

Spec: Page | Segment Documentation
Skip to main content
Home
Getting Started
What is Segment?
How Segment Works
Getting Started Guide
A Basic Segment Installation
Planning a Full Installation
A Full Segment Installation
Sending Data to Destinations
Testing and Debugging
What's Next
Use Cases
Use Cases Overview
Choosing a Use Case
Use Cases Setup
Use Cases Reference
Guides
An Introduction to Segment
For Developers
For Data Users
For Workspace Admins
Filtering your Segment Data
Handling Duplicate Data
Internet Bots
Segment vs. Tag Managers
Replay
Regional Segment
Audiences and Journeys
How-to Guides
How-to Guides Index
Automating Multi-Channel Re-Engagement Campaigns
Collecting Data on the Client or Server
Collecting Pageviews on the Server Side
Creating a Push Notification
Tracking Customers Across Channels and Devices
Setting up a Dynamic Coupon Program to Reward Loyal Customers
Forecasting LTV with SQL and Excel for E-Commerce
Importing Historical Data
Joining User Profiles
Measuring Your Advertising Funnel
Measuring the ROI of Your Marketing Campaigns
Migrating Code From Other Analytics Tools
Segment's Role in Attribution
Setting Up Event-Triggered Notifications or Alerts
Usage and Billing
Account Management
Billing and Account FAQs
MTUs, Throughput and Billing
Discounts or Coupons
Connections
Overview
The Segment Spec
Spec Overview
Spec: Page
Spec: Screen
Spec: Track
Spec: Group
Spec: Identify
Spec: Alias
Spec: AI Copilot
Spec: Common Fields
Native Mobile Spec
What is the native mobile spec?
Packaging SDKs for Mobile Destinations
Spec: Semantic Events
Spec: B2B SaaS
Spec: Ecommerce Events
Ecommerce Tracking Plans
Video Spec
Best Practices for Identifying Users
Best Practices for Event Calls
Sources
Sources Overview
Sources Catalog
Cloud Sources
Source Debugger
Segment-Managed Custom Domain
Self-Managed Custom Proxy
Visual Tagger
Schema
Schema Controls
Using Schema Controls
Schema Unique Limits
Destinations
Destinations Overview
Destination Actions
Add a Destination
Destinations Catalog
Destination Filters
Reverse ETL
Reverse ETL Overview
Set Up Reverse ETL
Manage Reverse ETL Syncs
Reverse ETL System
Reverse ETL Destination Catalog
Reverse ETL Source Setup Guides
Azure Reverse ETL Setup
BigQuery Reverse ETL Setup
Databricks Reverse ETL Setup
Postgres Reverse ETL Setup
Redshift Reverse ETL Setup
Snowflake Reverse ETL Setup
Functions
Functions Overview
Source Functions
Destination Functions
Destination Insert Functions
Functions Copilot
Functions Copilot Nutrition Facts Label
Functions Environment
Functions Usage Limits
Functions for AWS APIs
Storage Destinations
Storage Destinations Overview
Storage Destinations Catalog
Segment Data Lakes
Data Lakes Overview
Set Up Data Lakes
Sync Reports and Error Reporting
AWS Lake Formation
Data Lakes Sync History and Health
Data Lakes vs. Warehouses
Data Warehouses
Warehouse Overview
Warehouse Schemas
Warehouse Syncs
Warehouse Health Dashboards
Choosing a Warehouse
Warehouse FAQs
Adding Warehouse Users
Warehouse Errors
Redshift Cluster and Redshift Connector Limitations
Speeding Up Redshift Queries
Useful SQL Queries for Redshift
Regional Segment
Event Tester
Data Export Options
Using Schema Controls
Event Delivery
Delivery Overview
Connections Alerting
Locate Your Write Key
Integration Error Codes
Rate Limits
OAuth 2.0
AWS PrivateLink Integration
Unify
Unify Overview
Unify Onboarding
Identity Resolution
Overview
Onboarding
Space Setup
Use Cases
External IDs
Settings
E-Commerce Example
Profiles Sync
Profiles Sync Overview
Profiles Sync Setup
Setup
Databricks for Profiles Sync
Sample Queries
Tables & Materialized Views
Data Graph
Data Graph
Setup Guides
BigQuery Data Graph Setup
Databricks Data Graph Setup
Redshift Data Graph Setup
Snowflake Data Graph Setup
Linked Events
Linked Events Overview
Linked Events Limits
Traits
Predictions
Predictions
Using Predictions
Suggested Predictive Audiences
Predictions Nutrition Facts Label
Computed Traits
Custom Traits
SQL Traits
Recommended Items
Profile API
Profile Debugger
Profiles Insights
CSV Upload
Unify and GDPR
Unify FAQs
Unify Limits
Engage
Introduction
Foundations Onboarding
Premier Onboarding
Use Cases
User Subscriptions
User Subscriptions
Set User Subscriptions
Subscription States
Subscription Groups
Subscriptions with SQL Traits
Update Subscriptions with a CSV
Profiles
Use Profiles and Traits with a CSV
Audiences
Audiences Overview
Linked Audiences
Linked Audiences Overview
Linked Audiences Limits
Account-level Audiences
Generative Audiences
Generative Audiences Nutrition Facts Label
Product Based Audiences
Product Based Audiences Nutrition Facts Label
Organize Audiences
Send Audiences to Destinations
Journeys
Journeys Overview
Build a Journey
Journey Step Types
Journey Edits and Versioning
Send Data to Destinations
Journeys Analytics
Event-Triggered Journeys
Overview
Event-Triggered Journeys Steps
Journey Context
Journeys Best Practices and FAQ
Example Journeys Use Cases
Understand Journeys Logic
Journeys Glossary
Content
Email Template
Drag and Drop Editor
HTML Editor
SMS Template
WhatsApp Template
Mobile Push Template
Organizing Your Templates
Campaigns
Campaigns Overview
Email Campaigns
SMS Campaigns
Broadcasts
WhatsApp Campaigns
Mobile Push
Mobile Push Onboarding
Mobile Push Campaigns
Trait Activation
Trait Activation Overview
Trait Enrichment
ID Sync
Analytics Overview
Engage Settings
Engage Default Limits
Engage and Warehouses
Using Engage Data
Engage FAQs
Privacy
Privacy Overview
Privacy Portal
Detect PII
Data Controls and Alerts
GDPR
Complying With GDPR
User Deletion and Suppression
Consent Management
Consent Management Overview
Consent in Segment Connections
Configure Consent Management
Consent in Unify
Consent in Reverse ETL
Consent FAQs
Account & Data Deletion
HIPAA Eligible Segment
Privacy FAQs
Protocols
Protocols Overview
Create a Tracking Plan
Data Collection Best Practices
The Tracking Plan
Tracking Plan Libraries
Validate With Violations
Connect Sources to Your Tracking Plan
Review and Resolve Event Violations
Forward Violations
Enforce With Data Controls
Customize Your Schema Controls
Forward Blocked Events
Transform to Fix Bad Data
Protocols Extensions
Protocols APIs
Typewriter
Anomaly Detection
Schema Controls
Protocols FAQs
Segment App
Segment Web App
Workspace Home
Access Management
Identity & Access Management Overview
Concepts
Roles
Manage Workspace Access
Label-Based Access Control
Audit Trail
Single Sign On
System for Cross-domain Identity Management (SCIM) Configuration Guide
Multi-Factor Authentication (MFA)
Extensions
Extensions Overview
dbt
Git
Picking a Secure Password
Prod and Testing Environments in Segment
Verifying Your Email Address
Support Access
API
Public API
Public API
Destination Filter Query Language
Segment Query Language
Config API
Config API overview
API design
Authentication
Destination Filter Query Language
Partners
Glossary
Help
Product Updates
Back to Segment.com
Log in
Sign Up
Home
Getting Started
What is Segment?
How Segment Works
Getting Started Guide
A Basic Segment Installation
Planning a Full Installation
A Full Segment Installation
Sending Data to Destinations
Testing and Debugging
What's Next
Use Cases
Use Cases Overview
Choosing a Use Case
Use Cases Setup
Use Cases Reference
Guides
An Introduction to Segment
For Developers
For Data Users
For Workspace Admins
Filtering your Segment Data
Handling Duplicate Data
Internet Bots
Segment vs. Tag Managers
Replay
Regional Segment
Audiences and Journeys
How-to Guides
How-to Guides Index
Automating Multi-Channel Re-Engagement Campaigns
Collecting Data on the Client or Server
Collecting Pageviews on the Server Side
Creating a Push Notification
Tracking Customers Across Channels and Devices
Setting up a Dynamic Coupon Program to Reward Loyal Customers
Forecasting LTV with SQL and Excel for E-Commerce
Importing Historical Data
Joining User Profiles
Measuring Your Advertising Funnel
Measuring the ROI of Your Marketing Campaigns
Migrating Code From Other Analytics Tools
Segment's Role in Attribution
Setting Up Event-Triggered Notifications or Alerts
Usage and Billing
Account Management
Billing and Account FAQs
MTUs, Throughput and Billing
Discounts or Coupons
Connections
Overview
The Segment Spec
Spec Overview
Spec: Page
Spec: Screen
Spec: Track
Spec: Group
Spec: Identify
Spec: Alias
Spec: AI Copilot
Spec: Common Fields
Native Mobile Spec
What is the native mobile spec?
Packaging SDKs for Mobile Destinations
Spec: Semantic Events
Spec: B2B SaaS
Spec: Ecommerce Events
Ecommerce Tracking Plans
Video Spec
Best Practices for Identifying Users
Best Practices for Event Calls
Sources
Sources Overview
Sources Catalog
Cloud Sources
Source Debugger
Segment-Managed Custom Domain
Self-Managed Custom Proxy
Visual Tagger
Schema
Schema Controls
Using Schema Controls
Schema Unique Limits
Destinations
Destinations Overview
Destination Actions
Add a Destination
Destinations Catalog
Destination Filters
Reverse ETL
Reverse ETL Overview
Set Up Reverse ETL
Manage Reverse ETL Syncs
Reverse ETL System
Reverse ETL Destination Catalog
Reverse ETL Source Setup Guides
Azure Reverse ETL Setup
BigQuery Reverse ETL Setup
Databricks Reverse ETL Setup
Postgres Reverse ETL Setup
Redshift Reverse ETL Setup
Snowflake Reverse ETL Setup
Functions
Functions Overview
Source Functions
Destination Functions
Destination Insert Functions
Functions Copilot
Functions Copilot Nutrition Facts Label
Functions Environment
Functions Usage Limits
Functions for AWS APIs
Storage Destinations
Storage Destinations Overview
Storage Destinations Catalog
Segment Data Lakes
Data Lakes Overview
Set Up Data Lakes
Sync Reports and Error Reporting
AWS Lake Formation
Data Lakes Sync History and Health
Data Lakes vs. Warehouses
Data Warehouses
Warehouse Overview
Warehouse Schemas
Warehouse Syncs
Warehouse Health Dashboards
Choosing a Warehouse
Warehouse FAQs
Adding Warehouse Users
Warehouse Errors
Redshift Cluster and Redshift Connector Limitations
Speeding Up Redshift Queries
Useful SQL Queries for Redshift
Regional Segment
Event Tester
Data Export Options
Using Schema Controls
Event Delivery
Delivery Overview
Connections Alerting
Locate Your Write Key
Integration Error Codes
Rate Limits
OAuth 2.0
AWS PrivateLink Integration
Unify
Unify Overview
Unify Onboarding
Identity Resolution
Overview
Onboarding
Space Setup
Use Cases
External IDs
Settings
E-Commerce Example
Profiles Sync
Profiles Sync Overview
Profiles Sync Setup
Setup
Databricks for Profiles Sync
Sample Queries
Tables & Materialized Views
Data Graph
Data Graph
Setup Guides
BigQuery Data Graph Setup
Databricks Data Graph Setup
Redshift Data Graph Setup
Snowflake Data Graph Setup
Linked Events
Linked Events Overview
Linked Events Limits
Traits
Predictions
Predictions
Using Predictions
Suggested Predictive Audiences
Predictions Nutrition Facts Label
Computed Traits
Custom Traits
SQL Traits
Recommended Items
Profile API
Profile Debugger
Profiles Insights
CSV Upload
Unify and GDPR
Unify FAQs
Unify Limits
Engage
Introduction
Foundations Onboarding
Premier Onboarding
Use Cases
User Subscriptions
User Subscriptions
Set User Subscriptions
Subscription States
Subscription Groups
Subscriptions with SQL Traits
Update Subscriptions with a CSV
Profiles
Use Profiles and Traits with a CSV
Audiences
Audiences Overview
Linked Audiences
Linked Audiences Overview
Linked Audiences Limits
Account-level Audiences
Generative Audiences
Generative Audiences Nutrition Facts Label
Product Based Audiences
Product Based Audiences Nutrition Facts Label
Organize Audiences
Send Audiences to Destinations
Journeys
Journeys Overview
Build a Journey
Journey Step Types
Journey Edits and Versioning
Send Data to Destinations
Journeys Analytics
Event-Triggered Journeys
Overview
Event-Triggered Journeys Steps
Journey Context
Journeys Best Practices and FAQ
Example Journeys Use Cases
Understand Journeys Logic
Journeys Glossary
Content
Email Template
Drag and Drop Editor
HTML Editor
SMS Template
WhatsApp Template
Mobile Push Template
Organizing Your Templates
Campaigns
Campaigns Overview
Email Campaigns
SMS Campaigns
Broadcasts
WhatsApp Campaigns
Mobile Push
Mobile Push Onboarding
Mobile Push Campaigns
Trait Activation
Trait Activation Overview
Trait Enrichment
ID Sync
Analytics Overview
Engage Settings
Engage Default Limits
Engage and Warehouses
Using Engage Data
Engage FAQs
Privacy
Privacy Overview
Privacy Portal
Detect PII
Data Controls and Alerts
GDPR
Complying With GDPR
User Deletion and Suppression
Consent Management
Consent Management Overview
Consent in Segment Connections
Configure Consent Management
Consent in Unify
Consent in Reverse ETL
Consent FAQs
Account & Data Deletion
HIPAA Eligible Segment
Privacy FAQs
Protocols
Protocols Overview
Create a Tracking Plan
Data Collection Best Practices
The Tracking Plan
Tracking Plan Libraries
Validate With Violations
Connect Sources to Your Tracking Plan
Review and Resolve Event Violations
Forward Violations
Enforce With Data Controls
Customize Your Schema Controls
Forward Blocked Events
Transform to Fix Bad Data
Protocols Extensions
Protocols APIs
Typewriter
Anomaly Detection
Schema Controls
Protocols FAQs
Segment App
Segment Web App
Workspace Home
Access Management
Identity & Access Management Overview
Concepts
Roles
Manage Workspace Access
Label-Based Access Control
Audit Trail
Single Sign On
System for Cross-domain Identity Management (SCIM) Configuration Guide
Multi-Factor Authentication (MFA)
Extensions
Extensions Overview
dbt
Git
Picking a Secure Password
Prod and Testing Environments in Segment
Verifying Your Email Address
Support Access
API
Public API
Public API
Destination Filter Query Language
Segment Query Language
Config API
Config API overview
API design
Authentication
Destination Filter Query Language
Partners
Glossary
Config API
Config API overview
API design
Authentication
Destination Filter Query Language
Reference
Creating a Javascript web source and Google Analytics destination
Help
Home
/
Connections
/
Spec
/
Spec: Page
Spec: Page
On this page
Example
Identities
Properties
The Page call lets you record whenever a user sees a page of your website, along with any optional properties about the page. Calling Page or Screen in a Segment source is one of the first steps to getting started with Segment.
Segment University: The Page Method
Check out our high-level overview of the Page method in Segment University. (Must be logged in to access.)
Note: In analytics.js a Page call is included in the snippet by default just after analytics.load. Many destinations require this page event to be fired at least once per page load for proper initialization. You may add an optional name or properties to the default call, or call it multiple times per page load if you have a single-page application.
Here’s the payload of a typical Page call with most common fields removed:
{
"type": "page",
"name": "Home",
"properties": {
"title": "Welcome | Initech",
"url": "http://www.example.com"
}
}
And here’s the corresponding JavaScript event that would generate the above payload. If you’re using Segment’s JavaScript library, the page name and URL are automatically gathered and passed as properties into the event payload:
analytics.page("Retail Page","Home");
Based on the library you use, the syntax in the examples might be different. You can find library-specific documentation on the Sources Overview page.
Beyond the common fields, the Page call takes the following fields:
Field
Type
Description
category
optional
String
The category of the page, added to the properties object.
Passed as the first argument in a page call, for example analytics.page("category", "name");
name
optional
String
Name of the page
For example, most sites have a “Signup” page that can be useful to tag, so you can see users as they move through your funnel.
properties
optional
Object
Free-form dictionary of properties of the page, like url and referrer
See the Properties field docs for a list of reserved property names.
Example
Here’s a complete example of a Page call:
{
"anonymousId": "507f191e810c19729de860ea",
"channel": "browser",
"context": {
"ip": "8.8.8.8",
"userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.115 Safari/537.36"
},
"integrations": {
"All": true,
"Mixpanel": false,
"Salesforce": false
},
"messageId": "022bb90c-bbac-11e4-8dfc-aa07a5b093db",
"name": "Home",
"properties": {
"title": "Welcome | Initech",
"url": "http://www.example.com"
},
"receivedAt": "2015-02-23T22:28:55.387Z",
"sentAt": "2015-02-23T22:28:55.111Z",
"timestamp": "2015-02-23T22:28:55.111Z",
"type": "page",
"userId": "97980cfea0067",
"version": "1.1"
}
Create your own Page call
Use the following interactive code pen to see what your Page calls would look like with user-provided information:
Make a Page Call
Sample Page Call
Identities
The User ID is a unique identifier for the user performing the actions. Check out the User ID docs for more detail.
The Anonymous ID can be any pseudo-unique identifier, for cases where you don’t know who the user is, but you still want to tie them to an event. Check out the Anonymous ID docs for more detail.
Note: In our browser and mobile libraries a User ID is automatically added from the state stored by a previous identify call, so you do not need to add it yourself. They will also automatically handle Anonymous IDs under the covers.
Properties
Properties are extra pieces of information that describe the page. They can be anything you want.
Segment handles properties with semantic meanings in unique ways. For example, Segment always expects path to be a page’s URL path, and referrer to be the previous page’s URL.
You should only use reserved properties for their intended meaning.
Reserved properties Segment has standardized:
Property
Type
Description
name
String
Name of the page. Reserved for future use.
path
String
Path portion of the page’s URL.
Equivalent to canonical path which defaults to location.pathname from the DOM API.
referrer
String
Previous page’s full URL.
Equivalent to document.referrer from the DOM API.
search
String
Query string portion of the page’s URL. Equivalent to location.search from the DOM API.
title
String
Page’s title. Equivalent to document.title from the DOM API.
url
String
Page’s full URL. Segment first looks for the canonical URL. If the canonical URL is not provided, Segment uses location.href from the DOM API.
keywords
Array [String]
A list/array of keywords describing the page’s content. The keywords would most likely be the same as, or similar to, the keywords you would find in an HTML meta tag for SEO purposes. This property is mainly used by content publishers that rely heavily on pageview tracking. This isn’t automatically collected.
Note: In analytics.js, Segment automatically sends the following properties: title, path, url, referrer, and search.
This page was last modified: 21 Nov 2023
Need support?
Questions? Problems? Need more info? Contact Segment Support for assistance!
Visit our Support page
Help improve these docs!
Edit this page
Request docs change
Was this page helpful?
Yes
No
Thanks for your feedback!
Can we improve this doc? Send us feedback!
Get started with Segment
Segment is the easiest way to integrate your websites & mobile apps data to over 300 analytics and growth tools.
Request Demo
or
Create free account
Edit this page
Request docs change
On this page
Example
Identities
Properties
Was this page helpful?
Yes
No
Thanks for your feedback!
Can we improve this doc? Send us feedback!
Product
Connections
Protocols
Twilio Engage
Integrations Catalog
Pricing
Security
GDPR
For Developers
Documentation
Segment API
Build on Segment
Open Source
Engineering Team
Company
Careers
Blog
Press
FTFY Podcast
Events
Support
Help Center
Contact us
Resources
Recipes
Security Bulletins
Become a Partner
© 2025 Segment.io, Inc.
Privacy
Terms
Website Data Collection Preferences
Send
Send
Send